{"version":3,"sources":["assets/trump.gif","components/LearnWords.jsx","components/FlaggedWords.jsx","components/Main.jsx","components/Login.jsx","components/SignUp.jsx","components/Auth.jsx","components/Dashboard.jsx","components/Chat.jsx","Routes.jsx","serviceWorker.js","index.js"],"names":["module","exports","React","require","axios","LearnWords","state","word","meaning","revealMeaning","className","content","componentDidMount","get","then","result","data","Success","console","log","setState","alert","rememberWord","post","dontRememberWord","document","getElementsByClassName","style","visibility","openFlaggedWords","props","history","push","flagWord","setTimeout","Logout","hideAlert","onClick","this","bind","Alert","color","Button","icon","faSignOutAlt","Card","CardBody","CardTitle","CardText","faCheck","size","faTimes","faFlag","Component","FlaggedWords","nextWord","openLearnWords","CardHeader","CardFooter","Main","onChangeConfirmPassword","password","confirmPassword","target","value","onChangePassword","onChangeEmail","email","emailAddress","onChangeFirstName","fname","firstName","onChangeLastName","lname","lastName","SignUp","message","Login","toggle","isOpen","modalLogin","modelSignUp","modalSignUp","Navbar","expand","Container","NavbarBrand","e","preventDefault","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","toggleModalLogin","toggleModalSignUp","src","alt","Modal","modalClassName","aria-hidden","data-dismiss","type","faUser","Form","action","method","faEnvelope","Input","placeholder","onChange","faKey","block","faUserCircle","mobileNumber","onMobileChange","onPasswordChange","openSignUp","submitLoginForm","for","id","name","class","userType","onFirstNameChange","onLastNameChange","onConfirmPasswordChange","openLogin","submitSignUpForm","Route","Switch","Auth","path","match","component","Dashboard","redirectToChat","Chat","HashRouter","Routes","exact","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,4B,4NCIvCC,EAAQC,EAAQ,GACdC,EAAQD,EAAQ,IA4JPE,GA3JAF,EAAQ,I,4MAInBG,MAAQ,CACJC,KAAO,GACPC,QAAU,GACVC,cAAgB,GAChBC,UAAY,GACZC,QAAU,I,EAGdC,kBAAoB,WAChB,IAAIL,EAAMC,EACVJ,EAAMS,IAAI,cACJC,MAAK,SAACC,GAECA,EAAOC,KAAKC,SAGbC,QAAQC,IAAIJ,GACZR,EAAOQ,EAAOC,KAAKT,KACnBC,EAAUO,EAAOC,KAAKR,QAEtB,EAAKY,SAAS,CACVb,KAAOA,EACPC,QAAUA,EACVC,cAAgB,MATpBY,MAAM,6B,EAgBtBC,aAAe,WACX,IAAIf,EAAMC,EACVJ,EAAMmB,KAAK,eAAgB,EAAKjB,OAC1BQ,MAAK,SAACC,GAECA,EAAOC,KAAKC,SAGbV,EAAOQ,EAAOC,KAAKT,KACnBC,EAAUO,EAAOC,KAAKR,QAEtB,EAAKY,SAAS,CACVb,KAAOA,EACPC,QAAUA,EACVC,cAAgB,MARpBY,MAAM,6B,EAgBtBG,iBAAmB,WACf,IAAIjB,EAAMC,EACVJ,EAAMmB,KAAK,eAAgB,EAAKjB,OAC1BQ,MAAK,SAACC,GAECA,EAAOC,KAAKC,SAGbV,EAAOQ,EAAOC,KAAKT,KACnBC,EAAUO,EAAOC,KAAKR,QAEtB,EAAKY,SAAS,CACVb,KAAOA,EACPC,QAAUA,EACVC,cAAgB,MARpBY,MAAM,6B,EAetBZ,cAAgB,WAEZ,EAAKW,SAAS,CACVX,cAAgB,EAAKH,MAAME,UAG/BiB,SAASC,uBAAuB,gBAAgB,GAAGC,MAAMC,WAAa,W,EAG1EC,iBAAmB,WACf,EAAKC,MAAMC,QAAQC,KAAK,a,EAG5BC,SAAW,WAGP7B,EAAMmB,KAAK,YAAa,EAAKjB,OACvBQ,MAAK,SAACC,GAECA,EAAOC,KAAKC,SAGbQ,SAASC,uBAAuB,UAAU,GAAGC,MAAMC,WAAa,UAChEM,YAAW,WACPT,SAASC,uBAAuB,UAAU,GAAGC,MAAMC,WAAa,WACjE,MALHP,MAAM,6B,EAWtBc,OAAS,WACL,EAAKL,MAAMC,QAAQC,KAAK,M,EAG5BI,UAAY,WACRX,SAASC,uBAAuB,UAAU,GAAGC,MAAMC,WAAa,U,uDAIhE,OACI,2BACI,uBAAKlB,UAAU,SAASiB,MAAO,CAACC,WAAW,UAAWS,QAASC,KAAKF,UAAUG,KAAKD,OAC/E,gBAACE,EAAA,EAAD,CAAOC,MAAM,QAAb,0BAEJ,uBAAK/B,UAAU,iBACX,gBAACgC,EAAA,EAAD,CAAQhC,UAAU,uBAAuB+B,MAAM,OAAQJ,QAASC,KAAKT,iBAAiBU,KAAKD,OAA3F,kBAEJ,uBAAK5B,UAAU,UACX,gBAACgC,EAAA,EAAD,CAAQhC,UAAU,uBAAuB+B,MAAM,OAAQJ,QAASC,KAAKH,OAAOI,KAAKD,OAAO,gBAAC,IAAD,CAAiBK,KAAMC,QAEnH,uBAAKlC,UAAU,eACX,gBAACmC,EAAA,EAAD,CAAMnC,UAAU,yBAAyB2B,QAASC,KAAK7B,cAAc8B,KAAKD,OACtE,gBAACQ,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,KAAYT,KAAKhC,MAAMC,QAG/B,gBAACsC,EAAA,EAAD,CAAMnC,UAAU,sCAAsCiB,MAAO,CAACC,WAAW,WACrE,gBAACkB,EAAA,EAAD,KACI,gBAACE,EAAA,EAAD,CAAUtC,UAAU,WAAW4B,KAAKhC,MAAMG,iBAGlD,gBAACoC,EAAA,EAAD,CAAMnC,UAAU,qCACZ,gBAACoC,EAAA,EAAD,KACI,gBAACJ,EAAA,EAAD,CAAQL,QAASC,KAAKhB,aAAaiB,KAAKD,MAAOG,MAAM,UAAU/B,UAAU,eAAc,gBAAC,IAAD,CAAiBiC,KAAMM,IAASC,KAAK,QAC5H,gBAACR,EAAA,EAAD,CAAQL,QAASC,KAAKd,iBAAiBe,KAAKD,MAAOG,MAAM,UAAU/B,UAAU,eAAc,gBAAC,IAAD,CAAiBiC,KAAMQ,IAASD,KAAK,QAChI,2BACA,2BACA,gBAACR,EAAA,EAAD,CAAQL,QAASC,KAAKL,SAASM,KAAKD,MAAOG,MAAM,UAAS,gBAAC,IAAD,CAAiBE,KAAMS,IAAQF,KAAK,gB,GA/IjGhD,EAAMmD,Y,wBCJ3BnD,EAAQC,EAAQ,GACdC,EAAQD,EAAQ,IAoGPmD,GAnGAnD,EAAQ,I,4MAInBG,MAAQ,CACJC,KAAO,GACPC,QAAU,GACVC,cAAgB,I,EAGpBG,kBAAoB,WAChB,IAAIL,EAAMC,EACVJ,EAAMS,IAAI,qBACJC,MAAK,SAACC,GAECA,EAAOC,KAAKC,SAGbV,EAAOQ,EAAOC,KAAKT,KACnBC,EAAUO,EAAOC,KAAKR,QACtBU,QAAQC,IAAIJ,EAAOC,MACnB,EAAKI,SAAS,CACVb,KAAOA,EACPC,QAAUA,EACVC,cAAgB,MARpBY,MAAM,6B,EAetBkC,SAAW,WAEP,IAAIhD,EAAMC,EACVJ,EAAMS,IAAI,oBAAqB,EAAKP,OAC9BQ,MAAK,SAACC,GAECA,EAAOC,KAAKC,SAGbV,EAAOQ,EAAOC,KAAKT,KACnBC,EAAUO,EAAOC,KAAKR,QAEtB,EAAKY,SAAS,CACVb,KAAOA,EACPC,QAAUA,EACVC,cAAgB,MARpBY,MAAM,6B,EAetBZ,cAAgB,WACZ,EAAKW,SAAS,CACVX,cAAgB,EAAKH,MAAME,W,EAInCgD,eAAiB,WACb,EAAK1B,MAAMC,QAAQC,KAAK,W,EAG5BI,UAAY,WACRX,SAASC,uBAAuB,UAAU,GAAGC,MAAMC,WAAa,U,uDAIhE,OACI,2BACI,uBAAKlB,UAAU,SAASiB,MAAO,CAACC,WAAW,UAAWS,QAASC,KAAKF,UAAUG,KAAKD,OAC/E,gBAACE,EAAA,EAAD,CAAOC,MAAM,WAAb,0BAEJ,uBAAK/B,UAAU,iBACX,gBAACgC,EAAA,EAAD,CAAQhC,UAAU,uBAAuB+B,MAAM,OAAOJ,QAASC,KAAKkB,eAAejB,KAAKD,OAAxF,gBAEJ,uBAAK5B,UAAU,UACX,gBAACgC,EAAA,EAAD,CAAQhC,UAAU,uBAAuB+B,MAAM,OAAQJ,QAASC,KAAKH,OAAOI,KAAKD,OAAO,gBAAC,IAAD,CAAiBK,KAAMC,QAEnH,uBAAKlC,UAAU,eACX,gBAACmC,EAAA,EAAD,CAAMnC,UAAU,cACZ,gBAAC+C,EAAA,EAAD,CAAY/C,UAAU,eAClB,gBAACqC,EAAA,EAAD,KAAYT,KAAKhC,MAAMC,OAE3B,gBAACuC,EAAA,EAAD,aAAUpC,UAAU,aAApB,YAA0C,eACtC,gBAACsC,EAAA,EAAD,KAAWV,KAAKhC,MAAMG,eACtB,2BACA,gBAACiC,EAAA,EAAD,CAAQD,MAAM,OAAOJ,QAASC,KAAK7B,cAAc8B,KAAKD,OAAtD,WAEJ,gBAACoB,EAAA,EAAD,CAAYhD,UAAU,eAClB,gBAACgC,EAAA,EAAD,CAAQL,QAASC,KAAKiB,SAAShB,KAAKD,MAAOG,MAAM,WAAjD,qB,GAxFDvC,EAAMmD,Y,qGCF7BjD,EAAQD,EAAQ,IAgTLwD,E,kDA5SX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IAiCV8B,wBAA0B,SAACC,GACvB,EAAKzC,SAAS,CAAC0C,gBAAkBD,EAASE,OAAOC,SAnClC,EAsCnBC,iBAAmB,SAACJ,GAChB,EAAKzC,SAAS,CAACyC,SAAWA,EAASE,OAAOC,SAvC3B,EA0CnBE,cAAgB,SAACC,GACb,EAAK/C,SAAS,CAACgD,aAAeD,EAAMJ,OAAOC,SA3C5B,EA8CnBK,kBAAoB,SAACC,GACjB,EAAKlD,SAAS,CAACmD,UAAYD,EAAMP,OAAOC,SA/CzB,EAkDnBQ,iBAAmB,SAACC,GAChB,EAAKrD,SAAS,CAACsD,SAAWD,EAAMV,OAAOC,SAnDxB,EAsDnBW,OAAS,WAED,EAAKrE,MAAMuD,WAAa,EAAKvD,MAAMwD,gBACnCzC,MAAM,0BAGNjB,EAAMmB,KAAK,UAAW,EAAKjB,OACzBQ,MAAK,SAACC,GACCA,EAAOC,KAAKC,QAOb,EAAKa,MAAMC,QAAQC,KAAK,YANxB,EAAKZ,SAAS,CAACwD,QAAQ,2BACvBnD,SAASC,uBAAuB,oBAAoB,GAAGC,MAAMC,WAAa,UAC1EM,YAAW,WACPT,SAASC,uBAAuB,oBAAoB,GAAGC,MAAMC,WAAa,WAC3E,UAnEA,EA2EnBiD,MAAQ,WAEJzE,EAAMmB,KAAK,SAAU,EAAKjB,OACpBQ,MAAK,SAACC,GAECA,EAAOC,KAAKC,QAQb,EAAKa,MAAMC,QAAQC,KAAK,YAPxBd,QAAQC,IAAI,eACZ,EAAKC,SAAS,CAACwD,QAAQ,mCACvBnD,SAASC,uBAAuB,oBAAoB,GAAGC,MAAMC,WAAa,UAC1EM,YAAW,WACPT,SAASC,uBAAuB,oBAAoB,GAAGC,MAAMC,WAAa,WAC3E,UAtFA,EA8FnBQ,UAAY,WACRX,SAASC,uBAAuB,UAAU,GAAGC,MAAMC,WAAa,UA7FhE,EAAKkD,OAAS,EAAKA,OAAOvC,KAAZ,gBACd,EAAKjC,MAAQ,CACTyE,QAAS,EACTC,YAAa,EACbC,aAAc,EACdV,UAAY,GACZG,SAAW,GACXN,aAAe,GACfP,SAAW,GACXC,gBAAkB,GAClBc,QAAU,IAZC,E,qDAiBftC,KAAKlB,SAAS,CACV2D,QAASzC,KAAKhC,MAAMyE,W,yCAKxBzC,KAAKlB,SAAS,CACV4D,YAAa1C,KAAKhC,MAAM0E,e,0CAK5B1C,KAAKlB,SAAS,CACV8D,aAAc5C,KAAKhC,MAAM4E,gB,+BAqE7B,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAK3C,MAAM,QACtB,kBAAC4C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAajD,QAAS,SAAAkD,GAAC,OAAIA,EAAEC,mBAA7B,oBACA,kBAACC,EAAA,EAAD,CAAepD,QAASC,KAAKwC,QACzB,0BAAMpE,UAAU,oCAChB,0BAAMA,UAAU,oCAChB,0BAAMA,UAAU,qCAEpB,kBAACgF,EAAA,EAAD,CAAUX,OAAQzC,KAAKhC,MAAMyE,OAAQY,QAAM,GACvC,kBAACC,EAAA,EAAD,CAAKD,QAAM,GACP,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASzD,QAASC,KAAKyD,iBAAiBxD,KAAKD,OAA7C,UAIJ,kBAACuD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASzD,QAASC,KAAK0D,kBAAkBzD,KAAKD,OAA9C,eAQpB,6BACA,yBAAK5B,UAAU,mBAAmBiB,MAAO,CAACC,WAAW,UAAWS,QAASC,KAAKF,UAAUG,KAAKD,OACzF,kBAACE,EAAA,EAAD,CAAOC,MAAM,WAAWH,KAAKhC,MAAMsE,UAEvC,yBAAKlE,UAAU,aACX,yBAAKA,UAAU,uBACX,mGACA,qDACA,6BACA,6BACA,yCACA,4BACI,4BAAI,+DACJ,4BAAI,kFACJ,4BAAI,kFACJ,4BAAI,qFAIZ,yBAAKA,UAAU,qBACX,yBAAKuF,IAAK9F,EAAQ,IAAwB+F,IAAI,iBAGtD,kBAACC,EAAA,EAAD,CACIzF,UAAU,6BACV0F,eAAe,cACfrB,OAAQzC,KAAKhC,MAAM0E,WACnBF,OAAQxC,KAAKyD,iBAAiBxD,KAAKD,OAEnC,kBAACO,EAAA,EAAD,CAAMnC,UAAU,wBAAwB+B,MAAM,QAC1C,yBAAK/B,UAAU,uCACX,4BACI2F,eAAa,EACb3F,UAAU,QACV4F,eAAa,QACbC,KAAK,SACLlE,QAASC,KAAKyD,mBAIlB,yBAAKrF,UAAU,qCACX,kBAAC,IAAD,CAAiBiC,KAAM6D,IAAQtD,KAAK,SAG5C,yBAAKxC,UAAU,cACX,kBAAC+F,EAAA,EAAD,CAAMC,OAAO,GAAGhG,UAAU,OAAOiG,OAAO,IACpC,yBAAKjG,UAAU,gBACX,6BACI,kBAAC,IAAD,CAAiBiC,KAAMiE,IAAY1D,KAAK,OACxC,kBAAC2D,EAAA,EAAD,CACQC,YAAY,gBACZpG,UAAU,aACV6F,KAAK,OACLQ,SAAYzE,KAAK4B,cAAc3B,KAAKD,SAGhD,6BACA,6BACI,kBAAC,IAAD,CAAiBK,KAAMqE,IAAO9D,KAAK,OACnC,kBAAC2D,EAAA,EAAD,CACIC,YAAY,WACZP,KAAK,WACL7F,UAAU,aACVqG,SAAYzE,KAAK2B,iBAAiB1B,KAAKD,YAM3D,yBAAK5B,UAAU,iCACX,kBAACgC,EAAA,EAAD,CACIuE,OAAK,EACLvG,UAAU,oCACV2B,QAASC,KAAKuC,MAAMtC,KAAKD,MACzBY,KAAK,MAJT,YAWZ,kBAACiD,EAAA,EAAD,CACIzF,UAAU,6BACV0F,eAAe,cACfrB,OAAQzC,KAAKhC,MAAM4E,YACnBJ,OAAQxC,KAAK0D,kBAAkBzD,KAAKD,OAEpC,kBAACO,EAAA,EAAD,CAAMnC,UAAU,wBAAwB+B,MAAM,QAC1C,yBAAK/B,UAAU,uCACX,4BACI2F,eAAa,EACb3F,UAAU,QACV4F,eAAa,QACbC,KAAK,SACLlE,QAASC,KAAK0D,oBAIlB,yBAAKtF,UAAU,qCACX,kBAAC,IAAD,CAAiBiC,KAAM6D,IAAQtD,KAAK,SAG5C,yBAAKxC,UAAU,cACX,kBAAC+F,EAAA,EAAD,CAAMC,OAAO,GAAGhG,UAAU,OAAOiG,OAAO,IACpC,yBAAKjG,UAAU,gBACX,6BACI,kBAAC,IAAD,CAAiBiC,KAAMiE,IAAY1D,KAAK,OACxC,kBAAC2D,EAAA,EAAD,CACQC,YAAY,gBACZpG,UAAU,aACV6F,KAAK,OACLQ,SAAYzE,KAAK4B,cAAc3B,KAAKD,SAGhD,6BACA,6BACI,kBAAC,IAAD,CAAiBK,KAAMuE,IAAchE,KAAK,OAC1C,kBAAC2D,EAAA,EAAD,CACQC,YAAY,aACZpG,UAAU,aACV6F,KAAK,OACLQ,SAAYzE,KAAK+B,kBAAkB9B,KAAKD,SAGpD,6BACA,6BACI,kBAAC,IAAD,CAAiBK,KAAMuE,IAAchE,KAAK,OAC1C,kBAAC2D,EAAA,EAAD,CACQC,YAAY,YACZpG,UAAU,aACV6F,KAAK,OACLQ,SAAYzE,KAAKkC,iBAAiBjC,KAAKD,SAGnD,6BACA,6BACI,kBAAC,IAAD,CAAiBK,KAAMqE,IAAO9D,KAAK,OACnC,kBAAC2D,EAAA,EAAD,CACIC,YAAY,WACZP,KAAK,WACL7F,UAAU,aACVqG,SAAYzE,KAAK2B,iBAAiB1B,KAAKD,SAG/C,6BACA,6BACI,kBAAC,IAAD,CAAiBK,KAAMqE,IAAO9D,KAAK,OACnC,kBAAC2D,EAAA,EAAD,CACIC,YAAY,mBACZP,KAAK,WACL7F,UAAU,aACVqG,SAAYzE,KAAKsB,wBAAwBrB,KAAKD,YAOlE,yBAAK5B,UAAU,iCACX,kBAACgC,EAAA,EAAD,CACIuE,OAAK,EACLvG,UAAU,oCACV2B,QAASC,KAAKqC,OAAOpC,KAAKD,MAC1BY,KAAK,MAJT,uB,GA9RThD,IAAMmD,WCRrBnD,EAAQC,EAAQ,GACdC,EAAQD,EAAQ,IAqEP0E,E,4MAjEXvE,MAAQ,CACJ6G,aAAc,GACdtD,SAAU,I,EAGduD,eAAiB,SAACD,GACd,EAAK/F,SAAS,CACV+F,aAAcA,EAAapD,OAAOC,S,EAI1CqD,iBAAmB,SAACxD,GAChB,EAAKzC,SAAS,CACVyC,SAAUA,EAASE,OAAOC,S,EAIlCsD,WAAa,WACT,EAAKxF,MAAMC,QAAQC,KAAK,iB,EAG5BuF,gBAAkB,WAEdnH,EAAMmB,KAAK,SAAU,EAAKjB,OACpBQ,MAAK,SAACC,GAECA,EAAOC,KAAKC,QAIb,EAAKa,MAAMC,QAAQC,KAAK,gBAHxB,EAAKF,MAAMC,QAAQC,KAAK,eACxBX,MAAM,wB,uDAUlB,OAEI,uBAAKX,UAAU,cACX,4BACI,yBAAO8G,IAAI,gBAAX,kBACA,2BACA,yBAAOjB,KAAK,OAAOkB,GAAG,eAAeC,KAAK,eAAeX,SAAUzE,KAAK8E,eAAe7E,KAAKD,QAC5F,2BACA,yBAAOkF,IAAI,SAAX,aACA,2BACA,yBAAOjB,KAAK,WAAWkB,GAAG,QAAQC,KAAK,QAAQX,SAAUzE,KAAK+E,iBAAiB9E,KAAKD,QACpF,2BACA,0BACIiE,KAAK,SACLoB,MAAM,iBACNtF,QAASC,KAAKiF,gBAAgBhF,KAAKD,OAHvC,WAQJ,yBAAOkF,IAAI,WAlBf,uCAmBwC,qBAAGnF,QAASC,KAAKgF,WAAW/E,KAAKD,OAAjC,iB,GA7DhCpC,EAAMmD,WCHtBnD,EAAQC,EAAQ,GACdC,EAAQD,EAAQ,IA0GPwE,E,4MAtGXrE,MAAQ,CACJiE,UAAW,GACXG,SAAU,GACVyC,aAAc,GACdtD,SAAU,GACVC,gBAAiB,GACjB8D,SAAU,U,EAGdC,kBAAoB,SAACtD,GACjB,EAAKnD,SAAS,CACVmD,UAAWA,EAAUR,OAAOC,S,EAIpC8D,iBAAmB,SAACpD,GAChB,EAAKtD,SAAS,CACVsD,SAAUA,EAASX,OAAOC,S,EAIlCoD,eAAiB,SAACD,GACd,EAAK/F,SAAS,CACV+F,aAAcA,EAAapD,OAAOC,S,EAI1CqD,iBAAmB,SAACxD,GAChB,EAAKzC,SAAS,CACVyC,SAAUA,EAASE,OAAOC,S,EAIlC+D,wBAA0B,SAACjE,GACvB,EAAK1C,SAAS,CACV0C,gBAAiBA,EAAgBC,OAAOC,S,EAIhDgE,UAAY,WACR,EAAKlG,MAAMC,QAAQC,KAAK,gB,EAG5BiG,iBAAmB,WAEX,EAAK3H,MAAMuD,WAAa,EAAKvD,MAAMwD,gBACnCzC,MAAM,0BAGNjB,EAAMmB,KAAK,UAAW,EAAKjB,OACzBQ,MAAK,SAACC,GACJG,QAAQC,IAAI,aACPJ,EAAOC,KAAKC,QAIb,EAAKa,MAAMC,QAAQC,KAAK,YAHxB,EAAKF,MAAMC,QAAQC,KAAK,KACxBX,MAAM,yB,uDAUlB,OACI,uBAAKX,UAAU,cACX,4BACI,yBAAO8G,IAAI,aAAX,eACA,2BACA,yBAAOjB,KAAK,OAAOkB,GAAG,YAAYC,KAAK,YAAYX,SAAUzE,KAAKuF,kBAAkBtF,KAAKD,QACzF,2BACA,yBAAOkF,IAAI,YAAX,cACA,2BACA,yBAAOjB,KAAK,OAAOkB,GAAG,WAAWC,KAAK,WAAWX,SAAUzE,KAAKwF,iBAAiBvF,KAAKD,QACtF,2BACA,yBAAOkF,IAAI,gBAAX,kBACA,2BACA,yBAAOjB,KAAK,OAAOkB,GAAG,eAAeC,KAAK,eAAeX,SAAUzE,KAAK8E,eAAe7E,KAAKD,QAC5F,2BACA,yBAAOkF,IAAI,SAAX,aACA,2BACA,yBAAOjB,KAAK,WAAWkB,GAAG,QAAQC,KAAK,QAAQX,SAAUzE,KAAK+E,iBAAiB9E,KAAKD,QACpF,2BACA,yBAAOkF,IAAI,SAAX,qBACA,2BACA,yBAAOjB,KAAK,WAAWkB,GAAG,SAASC,KAAK,SAASX,SAAUzE,KAAKyF,wBAAwBxF,KAAKD,QAC7F,2BACA,0BACIiE,KAAK,SACLoB,MAAM,iBACNtF,QAASC,KAAK2F,iBAAiB1F,KAAKD,OAHxC,WAQJ,yBAAOkF,IAAI,WA9Bf,qBA+BsB,qBAAGnF,QAASC,KAAK0F,UAAUzF,KAAKD,OAAhC,e,GAlGbpC,EAAMmD,WCAvBnD,EAAQC,EAAQ,G,EACEA,EAAQ,IAAzB+H,E,EAAAA,MAAOC,E,EAAAA,OAaGC,EAXJ,SAACtG,GACR,IAAMuG,EAAOvG,EAAMwG,MAAMD,KAEzB,OADAnH,QAAQC,IAAIkH,EAAM,gBAEd,gBAACF,EAAD,KACI,gBAACD,EAAD,CAAOG,KAAMA,EAAO,SAAUE,UAAW1D,IACzC,gBAACqD,EAAD,CAAOG,KAAMA,EAAO,UAAWE,UAAW5D,MCVlDzE,EAAQC,EAAQ,GAwBLqI,G,4MAnBXC,eAAiB,WACb,EAAK3G,MAAMC,QAAQC,KAAK,U,uDAIxB,OACI,uBAAKtB,UAAU,UACX,0BACI6F,KAAK,SACLoB,MAAM,aACNtF,QAASC,KAAKmG,eAAelG,KAAKD,OAHtC,a,GATQpC,EAAMmD,WCJxBjD,GAAQD,EAAQ,IAClBD,GAAQC,EAAQ,GA2BLuI,G,4MAtBX9H,kBAAoB,WAChBM,QAAQC,IAAI,sBACZf,GAAMS,IAAI,gBACJC,MAAK,SAACC,GACJG,QAAQC,IAAI,eACPJ,EAAOC,KAAKC,QAIb,EAAKa,MAAMC,QAAQC,KAAK,gBAHxB,EAAKF,MAAMC,QAAQC,KAAK,eACxBX,MAAM,wB,uDAOlB,OACI,wBAAKX,UAAU,UACX,gE,GAlBGR,GAAMmD,WCErBnD,GAAQC,EAAQ,G,GACMA,EAAQ,IAA7B+H,G,GAAAA,MAAOS,G,GAAAA,WAeGC,GAbF,SAAC9G,GACV,OACI,iBAAC6G,GAAD,KACI,iBAAC,GAAD,CAAON,KAAK,IAAIQ,OAAK,EAACN,UAAW5E,IACjC,iBAAC,GAAD,CAAO0E,KAAK,QAAQE,UAAWH,IAC/B,iBAAC,GAAD,CAAOC,KAAK,aAAaE,UAAWC,KACpC,iBAAC,GAAD,CAAOH,KAAK,QAAQE,UAAWG,KAC/B,iBAAC,GAAD,CAAOL,KAAK,SAASE,UAAWlI,IAChC,iBAAC,GAAD,CAAOgI,KAAK,WAAWE,UAAWjF,M,kBCN1BwF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASX,MACvB,2DCTNY,IAASC,OAAO,kBAAC,GAAD,MAAY1H,SAAS2H,eAAe,SDwH9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzI,MAAK,SAAA0I,GACjCA,EAAaC,kB","file":"js/main.33a748a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/trump.7507b0c7.gif\";","import { Card, CardImg, CardBody, CardTitle, CardText, Button, CardFooter, CardHeader, Alert } from 'reactstrap';\nimport { faSignOutAlt, faCheck, faTimes, faFlag } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nvar React = require('react');\nconst axios = require('axios');\nvar ReactDOM = require('react-dom');\n\nclass LearnWords extends React.Component {\n\n    state = {\n        word : \"\",\n        meaning : \"\",\n        revealMeaning : \"\",\n        className : \"\",\n        content : \"\"\n    }\n\n    componentDidMount = () => {\n        var word, meaning\n        axios.get('/get-words')\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    console.log(result);\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n\n                }\n             });\n    }\n\n    rememberWord = () => {\n        var word, meaning\n        axios.post('/learnt-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n                }\n                \n             });\n\n    }\n\n    dontRememberWord = () => {\n        var word, meaning\n        axios.post('/forgot-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n                }\n                \n             });\n    }\n\n    revealMeaning = () => {\n\n        this.setState({\n            revealMeaning : this.state.meaning\n        })\n\n        document.getElementsByClassName('meaning-card')[0].style.visibility = 'visible';\n    }\n\n    openFlaggedWords = () => {\n        this.props.history.push('/flagged')\n    }\n\n    flagWord = () => {\n\n        var word, meaning\n        axios.post('/add-flag', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    document.getElementsByClassName('alerts')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n                    }, 2000);\n                }\n                \n             });\n    }\n\n    Logout = () => {\n        this.props.history.push(\"/\")\n    }\n    \n    hideAlert = () => {\n        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"alerts\" style={{visibility:\"hidden\"}} onClick={this.hideAlert.bind(this)}>\n                    <Alert color='info'>Word has been flagged</Alert>\n                </div>\n                <div className=\"flagged-words\">\n                    <Button className='btn-simple btn-round' color='info'  onClick={this.openFlaggedWords.bind(this)}>Flagged Words</Button>\n                </div>\n                <div className=\"logout\">\n                    <Button className='btn-simple btn-round' color='info'  onClick={this.Logout.bind(this)}><FontAwesomeIcon icon={faSignOutAlt}/></Button>\n                </div>\n                <div className=\"learn-words\">\n                    <Card className=\"learn-card text-center\" onClick={this.revealMeaning.bind(this)}>\n                        <CardBody>\n                            <CardTitle>{this.state.word}</CardTitle>\n                        </CardBody>\n                    </Card>\n                    <Card className=\"learn-card text-center meaning-card\" style={{visibility:\"hidden\"}}>\n                        <CardBody>\n                            <CardText className=\"meaning\">{this.state.revealMeaning}</CardText>\n                        </CardBody>\n                    </Card>\n                    <Card className=\"learn-card text-center operations\">\n                        <CardBody>\n                            <Button onClick={this.rememberWord.bind(this)} color='primary' className='button-size'><FontAwesomeIcon icon={faCheck} size='2x'/></Button>\n                            <Button onClick={this.dontRememberWord.bind(this)} color='warning' className='button-size'><FontAwesomeIcon icon={faTimes} size='2x'/></Button>\n                            <br/>\n                            <br/>\n                            <Button onClick={this.flagWord.bind(this)} color='danger'><FontAwesomeIcon icon={faFlag} size='2x'/></Button>\n                        </CardBody>\n                    </Card>\n\n                </div>\n            </div> \n        );\n    }\n}\n\nexport default LearnWords;\n","import { Card, CardImg, CardBody, CardTitle, CardText, Button, CardFooter, CardHeader, Alert } from 'reactstrap';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nvar React = require('react');\nconst axios = require('axios');\nvar ReactDOM = require('react-dom');\n\nclass FlaggedWords extends React.Component {\n\n    state = {\n        word : \"\",\n        meaning : \"\",\n        revealMeaning : \"\"\n    }\n\n    componentDidMount = () => {\n        var word, meaning\n        axios.get('/get-flagged-word')\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n                    console.log(result.data)\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n\n                }\n             });\n    }\n\n    nextWord = () => {\n\n        var word, meaning\n        axios.get('/get-flagged-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n                }\n                \n             });\n    }\n\n    revealMeaning = () => {\n        this.setState({\n            revealMeaning : this.state.meaning\n        })\n    }\n\n    openLearnWords = () => {\n        this.props.history.push('/learn')\n    }\n\n    hideAlert = () => {\n        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"alerts\" style={{visibility:\"hidden\"}} onClick={this.hideAlert.bind(this)}>\n                    <Alert color='success'>Word has been flagged</Alert>\n                </div>\n                <div className=\"flagged-words\">\n                    <Button className='btn-simple btn-round' color='info' onClick={this.openLearnWords.bind(this)}>Learn Words</Button>\n                </div>\n                <div className=\"logout\">\n                    <Button className='btn-simple btn-round' color='info'  onClick={this.Logout.bind(this)}><FontAwesomeIcon icon={faSignOutAlt}/></Button>\n                </div>\n                <div className=\"learn-words\">\n                    <Card className=\"learn-card\">\n                        <CardHeader className=\"text-center\">\n                            <CardTitle>{this.state.word}</CardTitle>\n                        </CardHeader>\n                        <CardBody className=\"card-body\" className=\"text-center\">\n                            <CardText>{this.state.revealMeaning}</CardText>\n                            <br/>\n                            <Button color='info' onClick={this.revealMeaning.bind(this)}>Reveal</Button>\n                        </CardBody>\n                        <CardFooter className=\"text-center\">\n                            <Button onClick={this.nextWord.bind(this)} color='primary'>Next Word</Button>\n                        </CardFooter>\n                    </Card>\n                </div>\n            </div> \n        );\n    }\n}\n\nexport default FlaggedWords;\n","import React from 'react';\nimport { Navbar, Container, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink } from 'reactstrap';\nimport{ Button, Modal, ModalHeader, ModalBody, ModalFooter, Card, InputGroup, InputGroupAddon, InputGroupText, Form , Input, Alert} from 'reactstrap';\nimport { faUser, faEnvelope, faKey, faUserCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nvar axios = require('axios');\n\nclass Main extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen : false,\n            modalLogin : false,\n            modelSignUp : false,\n            firstName : '',\n            lastName : '',\n            emailAddress : '',\n            password : '',\n            confirmPassword : '',\n            message : ''\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    toggleModalLogin() {\n        this.setState({\n            modalLogin: !this.state.modalLogin\n        });\n    }\n\n    toggleModalSignUp() {\n        this.setState({\n            modalSignUp: !this.state.modalSignUp\n        });\n    }\n\n    onChangeConfirmPassword = (password) => {\n        this.setState({confirmPassword : password.target.value})\n    }\n\n    onChangePassword = (password) => {\n        this.setState({password : password.target.value})\n    }\n\n    onChangeEmail = (email) => {\n        this.setState({emailAddress : email.target.value})\n    }\n\n    onChangeFirstName = (fname) => {\n        this.setState({firstName : fname.target.value})\n    }\n\n    onChangeLastName = (lname) => {\n        this.setState({lastName : lname.target.value})\n    }\n\n    SignUp = () => {\n\n        if (this.state.password !== this.state.confirmPassword) {\n            alert('Passwords do not match');\n        } else {\n            \n            axios.post('/signup', this.state)\n             .then((result) => {\n                if (!result.data.Success) {\n                    this.setState({message:'Username already taken'})\n                    document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'hidden';\n                    }, 2000);\n                } else {\n                    this.props.history.push('/learn/');\n                }\n             });\n        }\n    }\n\n    Login = () => {\n\n        axios.post('/login', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    console.log(\"here we are\")\n                    this.setState({message:'Incorrect Username or Password'})\n                    document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'hidden';\n                    }, 2000);\n                } else {\n                    this.props.history.push('/learn/');\n                }\n             });\n        \n    }\n\n    hideAlert = () => {\n        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n    }\n\n    render(){\n        return(\n            <div>\n                <Navbar expand=\"lg\" color=\"info\">\n                    <Container>\n                        <NavbarBrand onClick={e => e.preventDefault()}>Lets Learn Words</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle}>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                        </NavbarToggler>\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink onClick={this.toggleModalLogin.bind(this)}>\n                                        Login\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink onClick={this.toggleModalSignUp.bind(this)}>\n                                        SignUp\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n                <br/>\n                <div className=\"alerts-main-page\" style={{visibility:\"hidden\"}} onClick={this.hideAlert.bind(this)}>\n                    <Alert color='warning'>{this.state.message}</Alert>\n                </div>\n                <div className=\"main-body\">\n                    <div className=\"content text-center\">\n                        <h1>Learn GRE words taken from the Essential 800 words of Barron's List</h1>\n                        <h2>SignUp to Get Started</h2>\n                        <br/>\n                        <br/>\n                        <h2>Features:</h2>\n                        <ul>\n                            <li><h3>One stop to ace the GRE verbal</h3></li>\n                            <li><h3>Flag words that you have a difficulty remembering</h3></li>\n                            <li><h3>AI based word iteration to help you learn fastest</h3></li>\n                            <li><h3>Keep track of your performance with a streak count</h3></li>\n                        </ul>\n                    </div>\n                    \n                    <div className=\"giphy text-center\">\n                        <img src={require('../assets/trump.gif')} alt=\"loading...\" />\n                    </div>\n                </div>\n                <Modal\n                    className=\"modal-login homepage-modal\"\n                    modalClassName=\" modal-info\"\n                    isOpen={this.state.modalLogin}\n                    toggle={this.toggleModalLogin.bind(this)}\n                >\n                    <Card className=\"card-login card-plain\" color='info'>\n                        <div className=\"modal-header justify-content-center\">\n                            <button\n                                aria-hidden={true}\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={this.toggleModalLogin}\n                            >\n                                \n                            </button>\n                            <div className=\"header header-primary text-center\">\n                                <FontAwesomeIcon icon={faUser} size='4x'/>\n                            </div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <Form action=\"\" className=\"form\" method=\"\">\n                                <div className=\"card-content\">\n                                    <div>\n                                        <FontAwesomeIcon icon={faEnvelope} size='2x'/>\n                                        <Input\n                                                placeholder=\"Email Address\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeEmail.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>   \n                                        <FontAwesomeIcon icon={faKey} size='2x'/>                                   \n                                        <Input\n                                            placeholder=\"Password\"\n                                            type=\"password\"\n                                            className=\"modalInput\"\n                                            onChange = {this.onChangePassword.bind(this)}\n                                        />\n                                    </div>\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"modal-footer text-center pt-4\">\n                            <Button\n                                block\n                                className=\"btn-neutral btn-round get-started\"\n                                onClick={this.Login.bind(this)}\n                                size=\"lg\"\n                            >\n                                Login\n                            </Button>\n                        </div>\n                    </Card>\n                </Modal>  \n                <Modal\n                    className=\"modal-login homepage-modal\"\n                    modalClassName=\" modal-info\"\n                    isOpen={this.state.modalSignUp}\n                    toggle={this.toggleModalSignUp.bind(this)}\n                >\n                    <Card className=\"card-login card-plain\" color='info'>\n                        <div className=\"modal-header justify-content-center\">\n                            <button\n                                aria-hidden={true}\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={this.toggleModalSignUp}\n                            >\n                                \n                            </button>\n                            <div className=\"header header-primary text-center\">\n                                <FontAwesomeIcon icon={faUser} size='4x'/>\n                            </div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <Form action=\"\" className=\"form\" method=\"\">\n                                <div className=\"card-content\">\n                                    <div>\n                                        <FontAwesomeIcon icon={faEnvelope} size='2x'/>\n                                        <Input\n                                                placeholder=\"Email Address\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeEmail.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>\n                                        <FontAwesomeIcon icon={faUserCircle} size='2x'/>\n                                        <Input\n                                                placeholder=\"First Name\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeFirstName.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>\n                                        <FontAwesomeIcon icon={faUserCircle} size='2x'/>\n                                        <Input\n                                                placeholder=\"Last Name\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeLastName.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>   \n                                        <FontAwesomeIcon icon={faKey} size='2x'/>                                   \n                                        <Input\n                                            placeholder=\"Password\"\n                                            type=\"password\"\n                                            className=\"modalInput\"\n                                            onChange = {this.onChangePassword.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>   \n                                        <FontAwesomeIcon icon={faKey} size='2x'/>                                   \n                                        <Input\n                                            placeholder=\"Confirm Password\"\n                                            type=\"password\"\n                                            className=\"modalInput\"\n                                            onChange = {this.onChangeConfirmPassword.bind(this)}\n                                        />\n                                    </div>\n\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"modal-footer text-center pt-4\">\n                            <Button\n                                block\n                                className=\"btn-neutral btn-round get-started\"\n                                onClick={this.SignUp.bind(this)}\n                                size=\"lg\"\n                            >\n                                Get Started\n                            </Button>\n                        </div>\n                    </Card>\n                </Modal>     \n            </div>\n        );\n    }\n}\n\nexport default Main;","var React = require('react');\nconst axios = require('axios');\n\nclass Login extends React.Component {\n\n    state = {\n        mobileNumber: \"\",\n        password: \"\",\n    }\n\n    onMobileChange = (mobileNumber) => {\n        this.setState({\n            mobileNumber: mobileNumber.target.value\n        });\n    }\n\n    onPasswordChange = (password) => {\n        this.setState({\n            password: password.target.value\n        });\n    }\n\n    openSignUp = () => {\n        this.props.history.push('/auth/signup');\n    }\n    \n    submitLoginForm = () => {\n\n        axios.post('/login', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    this.props.history.push('/auth/login');\n                    alert(\"Unable to Login\");\n                } else {\n                    this.props.history.push('/dashboard/');\n                }\n             });\n        \n    }\n\n    render() {\n\n        return (  \n            \n            <div className=\"login-form\">\n                <form>\n                    <label for=\"mobileNumber\">Mobile Number:</label>\n                    <br/>\n                    <input type=\"text\" id=\"mobileNumber\" name=\"mobileNumber\" onChange={this.onMobileChange.bind(this)} />\n                    <br/>\n                    <label for=\"pword\">Password:</label>\n                    <br/>\n                    <input type=\"password\" id=\"pword\" name=\"pword\" onChange={this.onPasswordChange.bind(this)} />\n                    <br/>\n                    <button\n                        type=\"button\"\n                        class=\"primary button\"\n                        onClick={this.submitLoginForm.bind(this)}\n                    >\n                        Submit\n                    </button>\n                </form>\n                <label for=\"signup\" ></label>\n                Don't have an account? Click here to<a onClick={this.openSignUp.bind(this)}> Sign Up</a>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","var React = require('react');\nconst axios = require('axios');\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        mobileNumber: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        userType: \"client\"\n    }\n\n    onFirstNameChange = (firstName) => {\n        this.setState({\n            firstName: firstName.target.value\n        });\n    }\n\n    onLastNameChange = (lastName) => {\n        this.setState({\n            lastName: lastName.target.value\n        });\n    }\n\n    onMobileChange = (mobileNumber) => {\n        this.setState({\n            mobileNumber: mobileNumber.target.value\n        });\n    }\n\n    onPasswordChange = (password) => {\n        this.setState({\n            password: password.target.value\n        });\n    }\n\n    onConfirmPasswordChange = (confirmPassword) => {\n        this.setState({\n            confirmPassword: confirmPassword.target.value\n        });\n    }\n\n    openLogin = () => {\n        this.props.history.push('/auth/login');\n    }\n\n    submitSignUpForm = () => {\n\n        if (this.state.password !== this.state.confirmPassword) {\n            alert('Passwords do not match');\n        } else {\n            \n            axios.post('/signup', this.state)\n             .then((result) => {\n                console.log(\"sent data\")\n                if (!result.data.Success) {\n                    this.props.history.push('/');\n                    alert(\"Unable to SignUp\")\n                } else {\n                    this.props.history.push('/learn/');\n                }\n             });\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"login-form\">\n                <form>\n                    <label for=\"firstName\">First Name:</label>\n                    <br/>\n                    <input type=\"text\" id=\"firstName\" name=\"firstName\" onChange={this.onFirstNameChange.bind(this)} />\n                    <br/>\n                    <label for=\"lastName\">Last Name:</label>\n                    <br/>\n                    <input type=\"text\" id=\"lastName\" name=\"lastName\" onChange={this.onLastNameChange.bind(this)} />\n                    <br/>\n                    <label for=\"mobileNumber\">Mobile Number:</label>\n                    <br/>\n                    <input type=\"text\" id=\"mobileNumber\" name=\"mobileNumber\" onChange={this.onMobileChange.bind(this)} />\n                    <br/>\n                    <label for=\"pword\">Password:</label>\n                    <br/>\n                    <input type=\"password\" id=\"pword\" name=\"pword\" onChange={this.onPasswordChange.bind(this)} />\n                    <br/>\n                    <label for=\"pword\">Confirm Password:</label>\n                    <br/>\n                    <input type=\"password\" id=\"cpword\" name=\"cpword\" onChange={this.onConfirmPasswordChange.bind(this)} />\n                    <br/>\n                    <button\n                        type=\"button\"\n                        class=\"primary button\"\n                        onClick={this.submitSignUpForm.bind(this)}\n                    >\n                        Submit\n                    </button>\n                </form>\n                <label for=\"signup\" ></label>\n                Already signed up?<a onClick={this.openLogin.bind(this)}> Login</a>\n            </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import Login from './Login';\nimport SignUp from './SignUp';\n\nvar React = require('react');\nvar {Route, Switch} = require('react-router-dom');\n\nvar Auth = (props) => {\n    const path = props.match.path;\n    console.log(path, \" is the path\");\n    return (\n        <Switch>\n            <Route path={path + \"/login\"} component={Login} />\n            <Route path={path + \"/signup\"} component={SignUp} />\n        </Switch>\n    );\n}\n\nexport default Auth;\n","\n\nvar React = require('react');\n\n\nclass Dashboard extends React.Component {\n\n    redirectToChat = () => {\n        this.props.history.push('/chat');\n    }\n\n    render() {\n        return (\n            <div className=\"navbar\">\n                <button\n                    type=\"button\"\n                    class=\"chatButton\"\n                    onClick={this.redirectToChat.bind(this)}\n                >\n                    Chat\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","\nconst axios = require('axios');\nvar React = require('react');\n\n\nclass Chat extends React.Component {\n\n    componentDidMount = () => {\n        console.log(\"logging on console\")\n        axios.get('/check_creds')\n             .then((result) => {\n                console.log(\"here we are\")\n                if (!result.data.Success) {\n                    this.props.history.push('/auth/login');\n                    alert(\"Unable to Login\");\n                } else {\n                    this.props.history.push('/dashboard/');\n                }\n             });\n    }\n    render() {\n        return (\n            <div className=\"navbar\">\n                <p>This is the chat section dude</p>\n            </div>\n        );\n    }\n}\n\nexport default Chat;\n","import LearnWords from './components/LearnWords';\nimport FlaggedWords from './components/FlaggedWords';\nimport Main from './components/Main';\nimport Auth from './components/Auth';\nimport Dashboard from './components/Dashboard';\nimport Chat from './components/Chat';\n\nvar React = require('react');\nvar {Route, HashRouter} = require('react-router-dom');\n\nvar Routes = (props) => {\n    return (\n        <HashRouter>\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/chat\" component={Chat} />\n            <Route path='/learn' component={LearnWords} />\n            <Route path='/flagged' component={FlaggedWords} />\n        </HashRouter>\n    );\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes.jsx';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/black-dashboard-pro-react.css'\nimport './styles/style.scss'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}