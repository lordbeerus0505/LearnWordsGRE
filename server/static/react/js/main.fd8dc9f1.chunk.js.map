{"version":3,"sources":["components/LearnWords.jsx","components/FlaggedWords.jsx","components/Main.jsx","components/Login.jsx","components/SignUp.jsx","components/Auth.jsx","components/Dashboard.jsx","components/Chat.jsx","Routes.jsx","serviceWorker.js","index.js"],"names":["React","require","axios","LearnWords","state","word","meaning","revealMeaning","componentDidMount","get","then","result","data","Success","console","log","setState","alert","rememberWord","post","dontRememberWord","openFlaggedWords","props","history","push","flagWord","document","getElementsByClassName","style","visibility","setTimeout","hideAlert","className","onClick","this","bind","Alert","color","Button","Card","CardHeader","CardTitle","CardBody","CardText","CardFooter","Component","FlaggedWords","nextWord","openLearnWords","Main","onChangeConfirmPassword","password","confirmPassword","target","value","onChangePassword","onChangeEmail","email","emailAddress","onChangeFirstName","fname","firstName","onChangeLastName","lname","lastName","SignUp","method","url","timeout","Login","toggle","isOpen","modalLogin","modelSignUp","modalSignUp","Navbar","expand","Container","NavbarBrand","href","e","preventDefault","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","toggleModalLogin","toggleModalSignUp","Modal","modalClassName","aria-hidden","data-dismiss","type","icon","faUser","size","Form","action","faEnvelope","Input","placeholder","onChange","faKey","block","faUserCircle","mobileNumber","onMobileChange","onPasswordChange","openSignUp","submitLoginForm","for","id","name","class","userType","onFirstNameChange","onLastNameChange","onConfirmPasswordChange","openLogin","submitSignUpForm","Route","Switch","Auth","path","match","component","Dashboard","redirectToChat","Chat","HashRouter","Routes","exact","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.fd8dc9f1.chunk.js","sourcesContent":["import { Card, CardImg, CardBody, CardTitle, CardText, Button, CardFooter, CardHeader, Alert } from 'reactstrap';\n\nvar React = require('react');\nconst axios = require('axios');\nvar ReactDOM = require('react-dom');\n\nclass LearnWords extends React.Component {\n\n    state = {\n        word : \"\",\n        meaning : \"\",\n        revealMeaning : \"\"\n    }\n\n    componentDidMount = () => {\n        var word, meaning\n        axios.get('/get-words')\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    console.log(result);\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n\n                }\n             });\n    }\n\n    rememberWord = () => {\n        var word, meaning\n        axios.post('/learnt-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n                }\n                \n             });\n\n    }\n\n    dontRememberWord = () => {\n        var word, meaning\n        axios.post('/forgot-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n                }\n                \n             });\n    }\n\n    revealMeaning = () => {\n        this.setState({\n            revealMeaning : this.state.meaning\n        })\n    }\n\n    openFlaggedWords = () => {\n        this.props.history.push('/flagged')\n    }\n\n    flagWord = () => {\n\n        var word, meaning\n        axios.post('/add-flag', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    document.getElementsByClassName('alerts')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n                    }, 2000);\n                }\n                \n             });\n    }\n    \n    hideAlert = () => {\n        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"alerts\" style={{visibility:\"hidden\"}} onClick={this.hideAlert.bind(this)}>\n                    <Alert color='success'>Word has been flagged</Alert>\n                </div>\n                <div className=\"flagged-words\">\n                    <Button className='btn-simple btn-round' color='info'  onClick={this.openFlaggedWords.bind(this)}>Flagged Words</Button>\n                </div>\n                <div className=\"learn-words\">\n                    <Card className=\"learn-card\">\n                        <CardHeader className=\"text-center\">\n                            <CardTitle>{this.state.word}</CardTitle>\n                        </CardHeader>\n                        <CardBody className=\"card-body\" className=\"text-center\">\n                            <CardText>{this.state.revealMeaning}</CardText>\n                            <br/>\n                            <Button color='info' onClick={this.revealMeaning.bind(this)}>Reveal</Button>\n                        </CardBody>\n                        <CardFooter className=\"text-center\">\n                            <Button onClick={this.rememberWord.bind(this)} color='primary' className='button-size'>I remember this</Button>\n                            <Button onClick={this.dontRememberWord.bind(this)} color='warning' className='button-size'>Dont Remember yet</Button>\n                            <br/>\n                            <br/>\n                            <Button onClick={this.flagWord.bind(this)} color='danger'>Flag Word</Button>\n                        </CardFooter>\n                    </Card>\n                </div>\n            </div> \n        );\n    }\n}\n\nexport default LearnWords;\n","import { Card, CardImg, CardBody, CardTitle, CardText, Button, CardFooter, CardHeader, Alert } from 'reactstrap';\n\nvar React = require('react');\nconst axios = require('axios');\nvar ReactDOM = require('react-dom');\n\nclass FlaggedWords extends React.Component {\n\n    state = {\n        word : \"\",\n        meaning : \"\",\n        revealMeaning : \"\"\n    }\n\n    componentDidMount = () => {\n        var word, meaning\n        axios.get('/get-flagged-word')\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n                    console.log(result.data)\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n\n                }\n             });\n    }\n\n    nextWord = () => {\n\n        var word, meaning\n        axios.get('/get-flagged-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning,\n                        revealMeaning : \"\"\n                    })\n                }\n                \n             });\n    }\n\n    revealMeaning = () => {\n        this.setState({\n            revealMeaning : this.state.meaning\n        })\n    }\n\n    openLearnWords = () => {\n        this.props.history.push('/learn')\n    }\n\n    hideAlert = () => {\n        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"alerts\" style={{visibility:\"hidden\"}} onClick={this.hideAlert.bind(this)}>\n                    <Alert color='success'>Word has been flagged</Alert>\n                </div>\n                <div className=\"flagged-words\">\n                    <Button className='btn-simple btn-round' color='info' onClick={this.openLearnWords.bind(this)}>Learn Words</Button>\n                </div>\n                <div className=\"learn-words\">\n                    <Card className=\"learn-card\">\n                        <CardHeader className=\"text-center\">\n                            <CardTitle>{this.state.word}</CardTitle>\n                        </CardHeader>\n                        <CardBody className=\"card-body\" className=\"text-center\">\n                            <CardText>{this.state.revealMeaning}</CardText>\n                            <br/>\n                            <Button color='info' onClick={this.revealMeaning.bind(this)}>Reveal</Button>\n                        </CardBody>\n                        <CardFooter className=\"text-center\">\n                            <Button onClick={this.nextWord.bind(this)} color='primary'>Next Word</Button>\n                        </CardFooter>\n                    </Card>\n                </div>\n            </div> \n        );\n    }\n}\n\nexport default FlaggedWords;\n","import React from 'react';\nimport { Navbar, Container, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink } from 'reactstrap';\nimport{ Button, Modal, ModalHeader, ModalBody, ModalFooter, Card, InputGroup, InputGroupAddon, InputGroupText, Form , Input} from 'reactstrap';\nimport { faUser, faEnvelope, faKey, faUserCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nvar axios = require('axios');\n\nclass Main extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen : false,\n            modalLogin : false,\n            modelSignUp : false,\n            firstName : '',\n            lastName : '',\n            emailAddress : '',\n            password : '',\n            confirmPassword : ''\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    toggleModalLogin() {\n        this.setState({\n            modalLogin: !this.state.modalLogin\n        });\n    }\n\n    toggleModalSignUp() {\n        this.setState({\n            modalSignUp: !this.state.modalSignUp\n        });\n    }\n\n    onChangeConfirmPassword = (password) => {\n        this.setState({confirmPassword : password.target.value})\n    }\n\n    onChangePassword = (password) => {\n        this.setState({password : password.target.value})\n    }\n\n    onChangeEmail = (email) => {\n        this.setState({emailAddress : email.target.value})\n    }\n\n    onChangeFirstName = (fname) => {\n        this.setState({firstName : fname.target.value})\n    }\n\n    onChangeLastName = (lname) => {\n        this.setState({lastName : lname.target.value})\n    }\n\n    SignUp = () => {\n\n        if (this.state.password !== this.state.confirmPassword) {\n            alert('Passwords do not match');\n        } else {\n            \n            axios({\n                method: 'post',\n                url: '/signup',\n                timeout: 60 * 4 * 1000,\n                data: this.state\n            })\n             .then((result) => {\n                console.log(\"sent data\")\n                if (!result.data.Success) {\n                    this.props.history.push('/auth/signup');\n                    alert(\"Unable to SignUp\")\n                } else {\n                    this.props.history.push('/learn/');\n                }\n             });\n        }\n    }\n\n    Login = () => {\n\n        axios.post('/login', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    this.props.history.push('/auth/login');\n                    alert(\"Unable to Login\");\n                } else {\n                    this.props.history.push('/learn/');\n                }\n             });\n        \n    }\n\n    render(){\n        return(\n            <div>\n                <Navbar expand=\"lg\" color=\"info\">\n                    <Container>\n                        <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>Lets Learn Words</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle}>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                        </NavbarToggler>\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink onClick={this.toggleModalLogin.bind(this)}>\n                                        Login\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink onClick={this.toggleModalSignUp.bind(this)}>\n                                        SignUp\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal\n                    className=\"modal-login\"\n                    modalClassName=\" modal-info\"\n                    isOpen={this.state.modalLogin}\n                    toggle={this.toggleModalLogin.bind(this)}\n                >\n                    <Card className=\"card-login card-plain\" color='info'>\n                        <div className=\"modal-header justify-content-center\">\n                            <button\n                                aria-hidden={true}\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={this.toggleModalLogin}\n                            >\n                                \n                            </button>\n                            <div className=\"header header-primary text-center\">\n                                <FontAwesomeIcon icon={faUser} size='4x'/>\n                            </div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <Form action=\"\" className=\"form\" method=\"\">\n                                <div className=\"card-content\">\n                                    <div>\n                                        <FontAwesomeIcon icon={faEnvelope} size='2x'/>\n                                        <Input\n                                                placeholder=\"Email Address\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeEmail.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>   \n                                        <FontAwesomeIcon icon={faKey} size='2x'/>                                   \n                                        <Input\n                                            placeholder=\"Password\"\n                                            type=\"password\"\n                                            className=\"modalInput\"\n                                            onChange = {this.onChangePassword.bind(this)}\n                                        />\n                                    </div>\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"modal-footer text-center pt-4\">\n                            <Button\n                                block\n                                className=\"btn-neutral btn-round get-started\"\n                                onClick={this.Login.bind(this)}\n                                size=\"lg\"\n                            >\n                                Login\n                            </Button>\n                        </div>\n                    </Card>\n                </Modal>  \n                <Modal\n                    className=\"modal-login\"\n                    modalClassName=\" modal-info\"\n                    isOpen={this.state.modalSignUp}\n                    toggle={this.toggleModalSignUp.bind(this)}\n                >\n                    <Card className=\"card-login card-plain\" color='info'>\n                        <div className=\"modal-header justify-content-center\">\n                            <button\n                                aria-hidden={true}\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={this.toggleModalSignUp}\n                            >\n                                \n                            </button>\n                            <div className=\"header header-primary text-center\">\n                                <FontAwesomeIcon icon={faUser} size='4x'/>\n                            </div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <Form action=\"\" className=\"form\" method=\"\">\n                                <div className=\"card-content\">\n                                    <div>\n                                        <FontAwesomeIcon icon={faEnvelope} size='2x'/>\n                                        <Input\n                                                placeholder=\"Email Address\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeEmail.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>\n                                        <FontAwesomeIcon icon={faUserCircle} size='2x'/>\n                                        <Input\n                                                placeholder=\"First Name\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeFirstName.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>\n                                        <FontAwesomeIcon icon={faUserCircle} size='2x'/>\n                                        <Input\n                                                placeholder=\"Last Name\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeLastName.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>   \n                                        <FontAwesomeIcon icon={faKey} size='2x'/>                                   \n                                        <Input\n                                            placeholder=\"Password\"\n                                            type=\"password\"\n                                            className=\"modalInput\"\n                                            onChange = {this.onChangePassword.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>   \n                                        <FontAwesomeIcon icon={faKey} size='2x'/>                                   \n                                        <Input\n                                            placeholder=\"Confirm Password\"\n                                            type=\"password\"\n                                            className=\"modalInput\"\n                                            onChange = {this.onChangeConfirmPassword.bind(this)}\n                                        />\n                                    </div>\n\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"modal-footer text-center pt-4\">\n                            <Button\n                                block\n                                className=\"btn-neutral btn-round get-started\"\n                                onClick={this.SignUp.bind(this)}\n                                size=\"lg\"\n                            >\n                                Get Started\n                            </Button>\n                        </div>\n                    </Card>\n                </Modal>     \n            </div>\n        );\n    }\n}\n\nexport default Main;","var React = require('react');\nconst axios = require('axios');\n\nclass Login extends React.Component {\n\n    state = {\n        mobileNumber: \"\",\n        password: \"\",\n    }\n\n    onMobileChange = (mobileNumber) => {\n        this.setState({\n            mobileNumber: mobileNumber.target.value\n        });\n    }\n\n    onPasswordChange = (password) => {\n        this.setState({\n            password: password.target.value\n        });\n    }\n\n    openSignUp = () => {\n        this.props.history.push('/auth/signup');\n    }\n    \n    submitLoginForm = () => {\n\n        axios.post('/login', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    this.props.history.push('/auth/login');\n                    alert(\"Unable to Login\");\n                } else {\n                    this.props.history.push('/dashboard/');\n                }\n             });\n        \n    }\n\n    render() {\n\n        return (  \n            \n            <div className=\"login-form\">\n                <form>\n                    <label for=\"mobileNumber\">Mobile Number:</label>\n                    <br/>\n                    <input type=\"text\" id=\"mobileNumber\" name=\"mobileNumber\" onChange={this.onMobileChange.bind(this)} />\n                    <br/>\n                    <label for=\"pword\">Password:</label>\n                    <br/>\n                    <input type=\"password\" id=\"pword\" name=\"pword\" onChange={this.onPasswordChange.bind(this)} />\n                    <br/>\n                    <button\n                        type=\"button\"\n                        class=\"primary button\"\n                        onClick={this.submitLoginForm.bind(this)}\n                    >\n                        Submit\n                    </button>\n                </form>\n                <label for=\"signup\" ></label>\n                Don't have an account? Click here to<a onClick={this.openSignUp.bind(this)}> Sign Up</a>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","var React = require('react');\nconst axios = require('axios');\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        mobileNumber: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        userType: \"client\"\n    }\n\n    onFirstNameChange = (firstName) => {\n        this.setState({\n            firstName: firstName.target.value\n        });\n    }\n\n    onLastNameChange = (lastName) => {\n        this.setState({\n            lastName: lastName.target.value\n        });\n    }\n\n    onMobileChange = (mobileNumber) => {\n        this.setState({\n            mobileNumber: mobileNumber.target.value\n        });\n    }\n\n    onPasswordChange = (password) => {\n        this.setState({\n            password: password.target.value\n        });\n    }\n\n    onConfirmPasswordChange = (confirmPassword) => {\n        this.setState({\n            confirmPassword: confirmPassword.target.value\n        });\n    }\n\n    openLogin = () => {\n        this.props.history.push('/auth/login');\n    }\n\n    submitSignUpForm = () => {\n\n        if (this.state.password !== this.state.confirmPassword) {\n            alert('Passwords do not match');\n        } else {\n            \n            axios.post('/signup', this.state)\n             .then((result) => {\n                console.log(\"sent data\")\n                if (!result.data.Success) {\n                    this.props.history.push('/');\n                    alert(\"Unable to SignUp\")\n                } else {\n                    this.props.history.push('/learn/');\n                }\n             });\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"login-form\">\n                <form>\n                    <label for=\"firstName\">First Name:</label>\n                    <br/>\n                    <input type=\"text\" id=\"firstName\" name=\"firstName\" onChange={this.onFirstNameChange.bind(this)} />\n                    <br/>\n                    <label for=\"lastName\">Last Name:</label>\n                    <br/>\n                    <input type=\"text\" id=\"lastName\" name=\"lastName\" onChange={this.onLastNameChange.bind(this)} />\n                    <br/>\n                    <label for=\"mobileNumber\">Mobile Number:</label>\n                    <br/>\n                    <input type=\"text\" id=\"mobileNumber\" name=\"mobileNumber\" onChange={this.onMobileChange.bind(this)} />\n                    <br/>\n                    <label for=\"pword\">Password:</label>\n                    <br/>\n                    <input type=\"password\" id=\"pword\" name=\"pword\" onChange={this.onPasswordChange.bind(this)} />\n                    <br/>\n                    <label for=\"pword\">Confirm Password:</label>\n                    <br/>\n                    <input type=\"password\" id=\"cpword\" name=\"cpword\" onChange={this.onConfirmPasswordChange.bind(this)} />\n                    <br/>\n                    <button\n                        type=\"button\"\n                        class=\"primary button\"\n                        onClick={this.submitSignUpForm.bind(this)}\n                    >\n                        Submit\n                    </button>\n                </form>\n                <label for=\"signup\" ></label>\n                Already signed up?<a onClick={this.openLogin.bind(this)}> Login</a>\n            </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import Login from './Login';\nimport SignUp from './SignUp';\n\nvar React = require('react');\nvar {Route, Switch} = require('react-router-dom');\n\nvar Auth = (props) => {\n    const path = props.match.path;\n    console.log(path, \" is the path\");\n    return (\n        <Switch>\n            <Route path={path + \"/login\"} component={Login} />\n            <Route path={path + \"/signup\"} component={SignUp} />\n        </Switch>\n    );\n}\n\nexport default Auth;\n","\n\nvar React = require('react');\n\n\nclass Dashboard extends React.Component {\n\n    redirectToChat = () => {\n        this.props.history.push('/chat');\n    }\n\n    render() {\n        return (\n            <div className=\"navbar\">\n                <button\n                    type=\"button\"\n                    class=\"chatButton\"\n                    onClick={this.redirectToChat.bind(this)}\n                >\n                    Chat\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","\nconst axios = require('axios');\nvar React = require('react');\n\n\nclass Chat extends React.Component {\n\n    componentDidMount = () => {\n        console.log(\"logging on console\")\n        axios.get('/check_creds')\n             .then((result) => {\n                console.log(\"here we are\")\n                if (!result.data.Success) {\n                    this.props.history.push('/auth/login');\n                    alert(\"Unable to Login\");\n                } else {\n                    this.props.history.push('/dashboard/');\n                }\n             });\n    }\n    render() {\n        return (\n            <div className=\"navbar\">\n                <p>This is the chat section dude</p>\n            </div>\n        );\n    }\n}\n\nexport default Chat;\n","import LearnWords from './components/LearnWords';\nimport FlaggedWords from './components/FlaggedWords';\nimport Main from './components/Main';\nimport Auth from './components/Auth';\nimport Dashboard from './components/Dashboard';\nimport Chat from './components/Chat';\n\nvar React = require('react');\nvar {Route, HashRouter} = require('react-router-dom');\n\nvar Routes = (props) => {\n    return (\n        <HashRouter>\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/chat\" component={Chat} />\n            <Route path='/learn' component={LearnWords} />\n            <Route path='/flagged' component={FlaggedWords} />\n        </HashRouter>\n    );\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes.jsx';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/black-dashboard-pro-react.css'\nimport './styles/style.scss'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}