{"version":3,"sources":["assets/trump.gif","components/LearnWords.jsx","components/FlaggedWords.jsx","components/Main.jsx","components/Login.jsx","components/SignUp.jsx","components/Auth.jsx","components/Dashboard.jsx","components/Chat.jsx","components/LearntWords.jsx","Routes.jsx","serviceWorker.js","index.js"],"names":["module","exports","axios","require","LearnWords","state","word","meaning","className","content","streak","componentDidMount","get","then","result","data","Success","console","log","setState","getStreak","alert","rememberWord","post","postStreak","document","getElementsByClassName","style","visibility","dontRememberWord","change","revealMeaning","openFlaggedWords","props","history","push","openLearntWords","flagWord","setTimeout","Logout","hideAlert","onClick","this","bind","Alert","color","Button","icon","faSignOutAlt","Card","onMouseOver","CardBody","CardTitle","CardText","faCheck","size","faTimes","faFlag","id","nrOfLevels","colors","percent","arcWidth","arcPadding","formatTextValue","value","React","Component","FlaggedWords","nextWord","unFlagWord","openLearnWords","faChevronRight","Main","getLeaderboard","getProgress","leaderboard","leader_board","progressBar","learnt","progressBarPercent","onChangeConfirmPassword","password","confirmPassword","target","onChangePassword","onChangeEmail","email","emailAddress","onChangeFirstName","fname","firstName","onChangeLastName","lname","lastName","SignUp","toggleModalSignUp","message","Login","toggleModalLogin","toggle","isOpen","modalLogin","modelSignUp","modalSignUp","items","elements","key","Navbar","expand","Container","NavbarBrand","e","preventDefault","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","src","alt","Progress","max","barClassName","Modal","modalClassName","aria-hidden","data-dismiss","type","faUser","Form","action","method","faEnvelope","Input","placeholder","onChange","faKey","block","faUserCircle","mobileNumber","onMobileChange","onPasswordChange","openSignUp","submitLoginForm","for","name","class","userType","onFirstNameChange","onLastNameChange","onConfirmPasswordChange","openLogin","submitSignUpForm","Route","Switch","Auth","path","match","component","Dashboard","redirectToChat","Chat","LearntWords","learnt_words","undefined","NotLearnt","HashRouter","Routes","exact","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.8d0272df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/trump.7507b0c7.gif\";","import { Card, CardImg, CardBody, CardTitle, CardText, Button, CardFooter, CardHeader, Alert } from 'reactstrap';\nimport { faSignOutAlt, faCheck, faTimes, faFlag } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport GaugeChart from 'react-gauge-chart';\n\nconst axios = require('axios');\nvar ReactDOM = require('react-dom');\n\nclass LearnWords extends React.Component {\n\n    state = {\n        word : \"\",\n        meaning : \"\",\n        className : \"\",\n        content : \"\",\n        streak : 0.5,\n    }\n\n    componentDidMount = () => {\n        var word, meaning\n        axios.get('/get-words')\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    console.log(result);\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning\n                    })\n                    this.getStreak();\n                }\n             });\n    }\n\n    rememberWord = () => {\n        var word, meaning\n        axios.post('/learnt-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning\n                    })\n\n                    this.postStreak('increase');\n                }\n                \n             });\n        document.getElementsByClassName('meaning-card')[0].style.visibility = 'hidden';\n    }\n\n    dontRememberWord = () => {\n        var word, meaning\n        axios.post('/forgot-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning\n                    })\n                    this.postStreak('decrease');\n                }\n                \n             });\n        document.getElementsByClassName('meaning-card')[0].style.visibility = 'hidden';\n    }\n\n    getStreak = () => {\n\n        axios.get('/get-streak')\n            .then((result) => {\n\n            if (!result.data.Success) {\n                console.log(\"here we are\")\n            } else {\n                this.setState({\n                    streak : (result.data.streak + 50)/100.0\n                });\n                console.log('Strreak is now', this.state.streak)\n            }\n            });\n    }\n\n    postStreak = (change) => {\n\n        axios.post('/post-streak',{'streakChange':change})\n            .then((result) => {\n\n            if (!result.data.Success) {\n                console.log(\"here we are\")\n            } else {\n                this.getStreak();\n            }\n            });\n    }\n\n    revealMeaning = () => {\n        document.getElementsByClassName('meaning-card')[0].style.visibility = 'visible';\n    }\n\n    openFlaggedWords = () => {\n        this.props.history.push('/flagged')\n    }\n\n    openLearntWords = () => {\n        this.props.history.push('/learnt')\n    }\n\n    flagWord = () => {\n\n        var word, meaning\n        axios.post('/add-flag', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    document.getElementsByClassName('alerts')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n                    }, 2000);\n                }\n                \n             });\n    }\n\n    Logout = () => {\n        this.props.history.push(\"/\")\n    }\n    \n    hideAlert = () => {\n        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div className=\"alerts\" style={{visibility:\"hidden\"}} onClick={this.hideAlert.bind(this)}>\n                    <Alert color='info'>Word has been flagged</Alert>\n                </div>\n                <div className=\"flagged-words\">\n                    <Button className='btn-simple btn-round' color='info'  onClick={this.openFlaggedWords.bind(this)}>Flagged Words</Button>\n                </div>\n                <div className=\"learnt-words\">\n                    <Button className='btn-simple btn-round' color='info'  onClick={this.openLearntWords.bind(this)}>Words Learnt</Button>\n                </div>\n                <div className=\"logout\">\n                    <Button className='btn-simple btn-round' color='info'  onClick={this.Logout.bind(this)}><FontAwesomeIcon icon={faSignOutAlt}/></Button>\n                </div>\n                <div className=\"learn-words\">\n                    <Card className=\"learn-card text-center\" \n                        onMouseOver = {this.revealMeaning.bind(this)}\n                    >\n                        <CardBody>\n                            <CardTitle>{this.state.word}</CardTitle>\n                        </CardBody>\n                    </Card>\n                    <Card className=\"learn-card text-center meaning-card\" style={{visibility:\"hidden\"}}>\n                        <CardBody>\n                            <CardText className=\"meaning\">{this.state.meaning}</CardText>\n                        </CardBody>\n                    </Card>\n                    <Card className=\"learn-card text-center operations\">\n                        <CardBody>\n                            <Button onClick={this.rememberWord.bind(this)} color='twitter' className='btn-round btn-icon choice-button'><FontAwesomeIcon icon={faCheck} size='2x'/></Button>\n                            <Button onClick={this.dontRememberWord.bind(this)} color='warning' className='btn-round btn-icon choice-button'><FontAwesomeIcon icon={faTimes} size='2x'/></Button>\n                            <br/>\n                            <Button onClick={this.flagWord.bind(this)} color='danger' className='btn-round btn-icon choice-button'><FontAwesomeIcon icon={faFlag} size='2x'/></Button>\n                        </CardBody>\n                    </Card>\n\n                </div>\n                <div className='learn-streak'>\n                    <Card>\n                        <CardBody>\n                            <CardTitle>Streak Count</CardTitle>\n                        </CardBody>\n                        <GaugeChart id=\"gauge-chart\" \n                            nrOfLevels={50}\n                            colors={['#00ff00', '#00ffff', '#0000ff']}\n                            percent={this.state.streak}\n                            arcWidth={0.3} \n                            arcPadding={0.02}\n                            formatTextValue={value => value - 50}\n                        />\n                    </Card>\n                </div>\n            </div> \n        );\n    }\n}\n\nexport default LearnWords;\n","import { Card, CardImg, CardBody, CardTitle, CardText, Button, CardFooter, CardHeader, Alert } from 'reactstrap';\nimport { faSignOutAlt,faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport {faFlag} from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nvar React = require('react');\nconst axios = require('axios');\nvar ReactDOM = require('react-dom');\n\nclass FlaggedWords extends React.Component {\n\n    state = {\n        word : \"\",\n        meaning : \"\",\n    }\n\n    componentDidMount = () => {\n        var word, meaning\n        axios.get('/get-flagged-word')\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n                    console.log(result.data)\n                    this.setState({\n                        word : word,\n                        meaning : meaning\n                    })\n\n                }\n             });\n    }\n\n    nextWord = () => {\n\n        var word, meaning\n        axios.get('/get-flagged-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning\n                    })\n                }\n                \n             });\n        document.getElementsByClassName('meaning-card')[0].style.visibility = 'hidden';\n    }\n\n    unFlagWord = () => {\n        var word, meaning\n        axios.post('/unflag-word', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    word = result.data.word;\n                    meaning = result.data.meaning;\n\n                    this.setState({\n                        word : word,\n                        meaning : meaning\n                    })\n                }\n                \n             });\n        document.getElementsByClassName('meaning-card')[0].style.visibility = 'hidden';\n    }\n\n    revealMeaning = () => {\n        document.getElementsByClassName('meaning-card')[0].style.visibility = 'visible';\n    }\n\n    openLearnWords = () => {\n        this.props.history.push('/learn')\n    }\n\n    hideAlert = () => {\n        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n    }\n\n    Logout = () => {\n        this.props.history.push(\"/\")\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"alerts\" style={{visibility:\"hidden\"}} onClick={this.hideAlert.bind(this)}>\n                    <Alert color='success'>Word has been flagged</Alert>\n                </div>\n                <div className=\"flagged-words\">\n                    <Button className='btn-simple btn-round' color='info' onClick={this.openLearnWords.bind(this)}>Learn Words</Button>\n                </div>\n                <div className=\"logout\">\n                    <Button className='btn-simple btn-round' color='info'  onClick={this.Logout.bind(this)}><FontAwesomeIcon icon={faSignOutAlt}/></Button>\n                </div>\n                <div className=\"learn-words\">\n                    <Card className=\"learn-card text-center\" \n                        onMouseOver = {this.revealMeaning.bind(this)}\n                    >\n                        <CardBody>\n                            <CardTitle>{this.state.word}</CardTitle>\n                        </CardBody>\n                    </Card>\n                    <Card className=\"learn-card text-center meaning-card\" style={{visibility:\"hidden\"}}>\n                        <CardBody>\n                            <CardText className=\"meaning\">{this.state.meaning}</CardText>\n                        </CardBody>\n                    </Card>\n                    <Card className=\"learn-card text-center operations\">\n                        <CardBody>\n                            <Button className='btn-round btn-icon choice-button' onClick={this.unFlagWord.bind(this)} color='info'><FontAwesomeIcon icon={faFlag} size='2x'/></Button>\n                            <Button className='btn-round btn-icon choice-button' onClick={this.nextWord.bind(this)} color='primary'><FontAwesomeIcon icon={faChevronRight} size='2x'/></Button>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div> \n        );\n    }\n}\n\nexport default FlaggedWords;\n","import React from 'react';\nimport { Navbar, Container, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, CardBody, CardTitle, CardText } from 'reactstrap';\nimport{ Button, Modal, Progress, ModalBody, ModalFooter, Card, InputGroup, InputGroupAddon, InputGroupText, Form , Input, Alert} from 'reactstrap';\nimport { faUser, faEnvelope, faKey, faUserCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport GaugeChart from 'react-gauge-chart'\n\nvar axios = require('axios');\n\nclass Main extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen : false,\n            modalLogin : false,\n            modelSignUp : false,\n            firstName : '',\n            lastName : '',\n            emailAddress : '',\n            password : '',\n            confirmPassword : '',\n            message : '',\n            progressBar : 0,\n            progressBarPercent : 0,\n            streak : 0.5,\n            leaderboard : {}\n        };\n    }\n\n    componentDidMount = () => {\n\n        this.getLeaderboard();\n        this.getStreak();\n        this.getProgress();\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    toggleModalLogin() {\n        this.setState({\n            modalLogin: !this.state.modalLogin,\n            isOpen : false\n        });\n    }\n\n    toggleModalSignUp() {\n        this.setState({\n            modalSignUp: !this.state.modalSignUp,\n            isOpen : false\n        });\n    }\n\n    getLeaderboard = () => {\n        axios.get('/get-leaderboard')\n            .then((result) => {\n\n            if (!result.data.Success) {\n                this.setState({\n                    leaderboard : {}\n                });\n            } else {\n                this.setState({\n                    leaderboard : result.data.leader_board\n                });\n                console.log('leaderboard is now', this.state.leaderboard)\n            }\n            });\n    }\n\n    getStreak = () => {\n\n        axios.get('/get-streak')\n            .then((result) => {\n\n            if (!result.data.Success) {\n                this.setState({\n                    streak : 0.5\n                });\n            } else {\n                this.setState({\n                    streak : (result.data.streak + 50)/100.0\n                });\n                console.log('Strreak is now', this.state.streak)\n            }\n            });\n    }\n\n    getProgress = () => {\n        axios.get('/progress-bar', this.state)\n            .then((result) => {\n\n            if (!result.data.Success) {\n                console.log(\"here we are\")\n            } else {\n                this.setState({\n                    progressBar : result.data.learnt,\n                    progressBarPercent : (result.data.learnt)*100/800.0\n                });\n            }\n            });\n    }\n\n    onChangeConfirmPassword = (password) => {\n        this.setState({confirmPassword : password.target.value})\n    }\n\n    onChangePassword = (password) => {\n        this.setState({password : password.target.value})\n    }\n\n    onChangeEmail = (email) => {\n        this.setState({emailAddress : email.target.value})\n    }\n\n    onChangeFirstName = (fname) => {\n        this.setState({firstName : fname.target.value})\n    }\n\n    onChangeLastName = (lname) => {\n        this.setState({lastName : lname.target.value})\n    }\n\n    SignUp = () => {\n\n        if (this.state.password !== this.state.confirmPassword) {\n            alert('Passwords do not match');\n        } else {\n            \n            axios.post('/signup', this.state)\n             .then((result) => {\n                if (!result.data.Success) {\n                    this.setState({message:'Username already taken'})\n                    document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'hidden';\n                    }, 2000);\n                } else {\n                    this.props.history.push('/');\n                    this.toggleModalSignUp();\n                    this.setState({\n                        message : \"SignUp Successful, click on Learn Words to start learning\"\n                    });\n                    document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'hidden';\n                    }, 2000);\n\n                    this.getStreak();\n                    this.getProgress();\n                    \n                }\n             });\n        }\n\n    }\n\n    Login = () => {\n\n        axios.post('/login', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    console.log(\"here we are\")\n                    this.setState({message:'Incorrect Username or Password'})\n                    document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'hidden';\n                    }, 2000);\n                } else {\n                    this.props.history.push('/');\n                    this.toggleModalLogin();\n                    this.setState({\n                        message : \"Login Successful, click on Learn Words to start learning\"\n                    });\n                    document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts-main-page')[0].style.visibility = 'hidden';\n                    }, 2000);\n\n                    this.getStreak();\n                    this.getProgress();\n\n                }\n             });\n\n    }\n\n    LearnWords = () => {\n        this.props.history.push('/learn/');\n    }\n\n    hideAlert = () => {\n        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n    }\n\n    render(){\n        const items = []\n        var elements = this.state.leaderboard\n        console.log(elements, \"list of elements, typs is\", typeof(elements))\n        for ( let key in elements) {    \n            items.push(\n                <Card>\n                    <CardBody>\n                        <CardTitle>\n                            {key} is the key\n                        </CardTitle>\n                        <CardText className=\"meaning\">{elements[key]}</CardText>\n                    </CardBody>\n                </Card>\n            )\n        }\n        return(\n            <div>\n                <Navbar expand=\"lg\" color=\"info\">\n                    <Container>\n                        <NavbarBrand onClick={e => e.preventDefault()}>Learn Words GRE</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle}>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                        </NavbarToggler>\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink onClick={this.toggleModalLogin.bind(this)} className='mouseChange'>\n                                        Login\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink onClick={this.toggleModalSignUp.bind(this)} className='mouseChange'>\n                                        SignUp\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink onClick={this.LearnWords.bind(this)} className='mouseChange'>\n                                        Learn Words\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n                <br/>\n                <div className=\"alerts-main-page\" style={{visibility:\"hidden\"}} onClick={this.hideAlert.bind(this)}>\n                    <Alert color='warning' className='text-center'>{this.state.message}</Alert>\n                </div>\n                <div className=\"main-body\">\n                    <div className=\"content text-center\">\n                        <h1>Learn GRE words taken from the Essential 800 words of Barron's List</h1>\n                        <h2>SignUp to Get Started</h2>\n                        <br/>\n                        <br/>\n                        <h2>Features:</h2>\n                        <ul>\n                            <li><h3>One stop to ace the GRE verbal</h3></li>\n                            <li><h3>Flag words that you have a difficulty remembering</h3></li>\n                            <li><h3>AI based word iteration to help you learn fastest</h3></li>\n                            <li><h3>Keep track of your performance with a streak count</h3></li>\n                        </ul>\n                    </div>\n                    \n                    <div className=\"giphy text-center\">\n                        <img src={require('../assets/trump.gif')} alt=\"loading...\" />\n                    </div>\n                    <br/>\n\n                    <br/>\n                    <div className='progressBar'>\n                        <Card>\n                            <div className=\"progress-container progress-info\">\n                                <CardBody>\n                                    <CardTitle>Progress</CardTitle>\n                                </CardBody>\n                                <Progress max=\"800\" value={this.state.progressBar} barClassName=\"progress-bar-info\" className='progressBarValue'>\n                                    <span>{this.state.progressBarPercent}%</span>\n                                </Progress>\n                                <br/>\n                            </div>\n                        </Card>\n                    </div>\n                    <div className='streak'>\n                        <Card>\n                            <CardBody>\n                                <CardTitle>Streak Count</CardTitle>\n                            </CardBody>\n                            <GaugeChart id=\"gauge-chart\" \n                                nrOfLevels={50}\n                                colors={['#00ff00', '#00ffff', '#0000ff']}\n                                percent={this.state.streak}\n                                arcWidth={0.3} \n                                arcPadding={0.02}\n                                formatTextValue={value => value - 50}\n                            />\n                        </Card>\n                    </div>\n                    <div className='leaderboard'>\n                        <Card>\n                            <CardBody>\n                                <CardTitle>Leaderboard</CardTitle>\n\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                \n                <Modal\n                    className=\"modal-login homepage-modal\"\n                    modalClassName=\" modal-info\"\n                    isOpen={this.state.modalLogin}\n                    toggle={this.toggleModalLogin.bind(this)}\n                >\n                    <Card className=\"card-login card-plain\" color='info'>\n                        <div className=\"modal-header justify-content-center\">\n                            <button\n                                aria-hidden={true}\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={this.toggleModalLogin}\n                            >\n                                \n                            </button>\n                            <div className=\"header header-primary text-center\">\n                                <FontAwesomeIcon icon={faUser} size='4x'/>\n                            </div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <Form action=\"\" className=\"form\" method=\"\">\n                                <div className=\"card-content\">\n                                    <div>\n                                        <FontAwesomeIcon icon={faEnvelope} size='2x'/>\n                                        <Input\n                                                placeholder=\"Email Address\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeEmail.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>   \n                                        <FontAwesomeIcon icon={faKey} size='2x'/>                                   \n                                        <Input\n                                            placeholder=\"Password\"\n                                            type=\"password\"\n                                            className=\"modalInput\"\n                                            onChange = {this.onChangePassword.bind(this)}\n                                        />\n                                    </div>\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"modal-footer text-center pt-4\">\n                            <Button\n                                block\n                                className=\"btn-neutral btn-round get-started\"\n                                onClick={this.Login.bind(this)}\n                                size=\"lg\"\n                            >\n                                Login\n                            </Button>\n                        </div>\n                    </Card>\n                </Modal>  \n                <Modal\n                    className=\"modal-login homepage-modal\"\n                    modalClassName=\" modal-info\"\n                    isOpen={this.state.modalSignUp}\n                    toggle={this.toggleModalSignUp.bind(this)}\n                >\n                    <Card className=\"card-login card-plain\" color='info'>\n                        <div className=\"modal-header justify-content-center\">\n                            <button\n                                aria-hidden={true}\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={this.toggleModalSignUp}\n                            >\n                                \n                            </button>\n                            <div className=\"header header-primary text-center\">\n                                <FontAwesomeIcon icon={faUser} size='4x'/>\n                            </div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <Form action=\"\" className=\"form\" method=\"\">\n                                <div className=\"card-content\">\n                                    <div>\n                                        <FontAwesomeIcon icon={faEnvelope} size='2x'/>\n                                        <Input\n                                                placeholder=\"Email Address\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeEmail.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>\n                                        <FontAwesomeIcon icon={faUserCircle} size='2x'/>\n                                        <Input\n                                                placeholder=\"First Name\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeFirstName.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>\n                                        <FontAwesomeIcon icon={faUserCircle} size='2x'/>\n                                        <Input\n                                                placeholder=\"Last Name\"\n                                                className=\"modalInput\"\n                                                type=\"text\"\n                                                onChange = {this.onChangeLastName.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>   \n                                        <FontAwesomeIcon icon={faKey} size='2x'/>                                   \n                                        <Input\n                                            placeholder=\"Password\"\n                                            type=\"password\"\n                                            className=\"modalInput\"\n                                            onChange = {this.onChangePassword.bind(this)}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div>   \n                                        <FontAwesomeIcon icon={faKey} size='2x'/>                                   \n                                        <Input\n                                            placeholder=\"Confirm Password\"\n                                            type=\"password\"\n                                            className=\"modalInput\"\n                                            onChange = {this.onChangeConfirmPassword.bind(this)}\n                                        />\n                                    </div>\n\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"modal-footer text-center pt-4\">\n                            <Button\n                                block\n                                className=\"btn-neutral btn-round get-started\"\n                                onClick={this.SignUp.bind(this)}\n                                size=\"lg\"\n                            >\n                                Get Started\n                            </Button>\n                        </div>\n                    </Card>\n                </Modal>     \n            </div>\n        );\n    }\n}\n\nexport default Main;","var React = require('react');\nconst axios = require('axios');\n\nclass Login extends React.Component {\n\n    state = {\n        mobileNumber: \"\",\n        password: \"\",\n    }\n\n    onMobileChange = (mobileNumber) => {\n        this.setState({\n            mobileNumber: mobileNumber.target.value\n        });\n    }\n\n    onPasswordChange = (password) => {\n        this.setState({\n            password: password.target.value\n        });\n    }\n\n    openSignUp = () => {\n        this.props.history.push('/auth/signup');\n    }\n    \n    submitLoginForm = () => {\n\n        axios.post('/login', this.state)\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    this.props.history.push('/auth/login');\n                    alert(\"Unable to Login\");\n                } else {\n                    this.props.history.push('/dashboard/');\n                }\n             });\n        \n    }\n\n    render() {\n\n        return (  \n            \n            <div className=\"login-form\">\n                <form>\n                    <label for=\"mobileNumber\">Mobile Number:</label>\n                    <br/>\n                    <input type=\"text\" id=\"mobileNumber\" name=\"mobileNumber\" onChange={this.onMobileChange.bind(this)} />\n                    <br/>\n                    <label for=\"pword\">Password:</label>\n                    <br/>\n                    <input type=\"password\" id=\"pword\" name=\"pword\" onChange={this.onPasswordChange.bind(this)} />\n                    <br/>\n                    <button\n                        type=\"button\"\n                        class=\"primary button\"\n                        onClick={this.submitLoginForm.bind(this)}\n                    >\n                        Submit\n                    </button>\n                </form>\n                <label for=\"signup\" ></label>\n                Don't have an account? Click here to<a onClick={this.openSignUp.bind(this)}> Sign Up</a>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","var React = require('react');\nconst axios = require('axios');\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        mobileNumber: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        userType: \"client\"\n    }\n\n    onFirstNameChange = (firstName) => {\n        this.setState({\n            firstName: firstName.target.value\n        });\n    }\n\n    onLastNameChange = (lastName) => {\n        this.setState({\n            lastName: lastName.target.value\n        });\n    }\n\n    onMobileChange = (mobileNumber) => {\n        this.setState({\n            mobileNumber: mobileNumber.target.value\n        });\n    }\n\n    onPasswordChange = (password) => {\n        this.setState({\n            password: password.target.value\n        });\n    }\n\n    onConfirmPasswordChange = (confirmPassword) => {\n        this.setState({\n            confirmPassword: confirmPassword.target.value\n        });\n    }\n\n    openLogin = () => {\n        this.props.history.push('/auth/login');\n    }\n\n    submitSignUpForm = () => {\n\n        if (this.state.password !== this.state.confirmPassword) {\n            alert('Passwords do not match');\n        } else {\n            \n            axios.post('/signup', this.state)\n             .then((result) => {\n                console.log(\"sent data\")\n                if (!result.data.Success) {\n                    this.props.history.push('/');\n                    alert(\"Unable to SignUp\")\n                } else {\n                    this.props.history.push('/learn/');\n                }\n             });\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"login-form\">\n                <form>\n                    <label for=\"firstName\">First Name:</label>\n                    <br/>\n                    <input type=\"text\" id=\"firstName\" name=\"firstName\" onChange={this.onFirstNameChange.bind(this)} />\n                    <br/>\n                    <label for=\"lastName\">Last Name:</label>\n                    <br/>\n                    <input type=\"text\" id=\"lastName\" name=\"lastName\" onChange={this.onLastNameChange.bind(this)} />\n                    <br/>\n                    <label for=\"mobileNumber\">Mobile Number:</label>\n                    <br/>\n                    <input type=\"text\" id=\"mobileNumber\" name=\"mobileNumber\" onChange={this.onMobileChange.bind(this)} />\n                    <br/>\n                    <label for=\"pword\">Password:</label>\n                    <br/>\n                    <input type=\"password\" id=\"pword\" name=\"pword\" onChange={this.onPasswordChange.bind(this)} />\n                    <br/>\n                    <label for=\"pword\">Confirm Password:</label>\n                    <br/>\n                    <input type=\"password\" id=\"cpword\" name=\"cpword\" onChange={this.onConfirmPasswordChange.bind(this)} />\n                    <br/>\n                    <button\n                        type=\"button\"\n                        class=\"primary button\"\n                        onClick={this.submitSignUpForm.bind(this)}\n                    >\n                        Submit\n                    </button>\n                </form>\n                <label for=\"signup\" ></label>\n                Already signed up?<a onClick={this.openLogin.bind(this)}> Login</a>\n            </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import Login from './Login';\nimport SignUp from './SignUp';\n\nvar React = require('react');\nvar {Route, Switch} = require('react-router-dom');\n\nvar Auth = (props) => {\n    const path = props.match.path;\n    console.log(path, \" is the path\");\n    return (\n        <Switch>\n            <Route path={path + \"/login\"} component={Login} />\n            <Route path={path + \"/signup\"} component={SignUp} />\n        </Switch>\n    );\n}\n\nexport default Auth;\n","\n\nvar React = require('react');\n\n\nclass Dashboard extends React.Component {\n\n    redirectToChat = () => {\n        this.props.history.push('/chat');\n    }\n\n    render() {\n        return (\n            <div className=\"navbar\">\n                <button\n                    type=\"button\"\n                    class=\"chatButton\"\n                    onClick={this.redirectToChat.bind(this)}\n                >\n                    Chat\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","\nconst axios = require('axios');\nvar React = require('react');\n\n\nclass Chat extends React.Component {\n\n    componentDidMount = () => {\n        console.log(\"logging on console\")\n        axios.get('/check_creds')\n             .then((result) => {\n                console.log(\"here we are\")\n                if (!result.data.Success) {\n                    this.props.history.push('/auth/login');\n                    alert(\"Unable to Login\");\n                } else {\n                    this.props.history.push('/dashboard/');\n                }\n             });\n    }\n    render() {\n        return (\n            <div className=\"navbar\">\n                <p>This is the chat section dude</p>\n            </div>\n        );\n    }\n}\n\nexport default Chat;\n","import { Card, CardImg, CardBody, CardTitle, CardText, Button, CardFooter, CardHeader, Alert } from 'reactstrap';\nimport { faSignOutAlt, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport {faFlag} from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nvar React = require('react');\nconst axios = require('axios');\nvar ReactDOM = require('react-dom');\n\nclass LearntWords extends React.Component {\n\n    state = {\n        word : \"\",\n        meaning : \"\",\n        learnt_words : undefined\n    }\n\n    componentDidMount = () => {\n        axios.get('/get-learnt-words')\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    this.setState({\n                        learnt_words : result.data.learnt_words\n                    })\n                }\n             });\n    }\n\n    NotLearnt = (key) => {\n\n        axios.post('/not-learnt-word', {'word' : key})\n             .then((result) => {\n\n                if (!result.data.Success) {\n                    alert(\"Cant get word dude :(\");\n                } else {\n                    document.getElementsByClassName('alerts')[0].style.visibility = 'visible';\n                    setTimeout(function() { \n                        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n                    }, 2000);\n                }\n                \n             });\n    }\n\n    revealMeaning = () => {\n        document.getElementsByClassName('meaning-card')[0].style.visibility = 'visible';\n    }\n\n    openLearnWords = () => {\n        this.props.history.push('/learn')\n    }\n\n    hideAlert = () => {\n        document.getElementsByClassName('alerts')[0].style.visibility = 'hidden';\n    }\n\n    Logout = () => {\n        this.props.history.push(\"/\")\n    }\n\n    render() {\n        const items = []\n        var elements = this.state.learnt_words\n        console.log(elements, \"list of elements, typs is\", typeof(elements))\n        for ( let key in elements) {    \n            items.push(\n                <Card>\n                    <CardBody>\n                        <CardTitle>\n                            {key}\n                            <Button className='btn-simple btn-icon btn-round xButton' color='danger' onClick={() => this.NotLearnt(key)}><FontAwesomeIcon icon={faTimes}/></Button>\n                        </CardTitle>\n                        <CardText className=\"meaning\">{elements[key]}</CardText>\n                    </CardBody>\n                </Card>\n            )\n        }\n\n        return (\n            <div>\n                <div className=\"alerts\" style={{visibility:\"hidden\"}} onClick={this.hideAlert.bind(this)}>\n                    <Alert color='success'>The word has been marked as Not Learnt</Alert>\n                </div>\n                <div className=\"flagged-words\">\n                    <Button className='btn-simple btn-round' color='info' onClick={this.openLearnWords.bind(this)}>Learn Words</Button>\n                </div>\n                <div className=\"logout\">\n                    <Button className='btn-simple btn-round' color='info'  onClick={this.Logout.bind(this)}><FontAwesomeIcon icon={faSignOutAlt}/></Button>\n                </div>\n                <div className=\"learn-words\">\n                    <div>\n                        {items}\n                    </div>\n                </div>\n            </div> \n        );\n    }\n}\n\nexport default LearntWords;\n","import LearnWords from './components/LearnWords';\nimport FlaggedWords from './components/FlaggedWords';\nimport Main from './components/Main';\nimport Auth from './components/Auth';\nimport Dashboard from './components/Dashboard';\nimport Chat from './components/Chat';\nimport LearntWords from './components/LearntWords';\n\nvar React = require('react');\nvar {Route, HashRouter} = require('react-router-dom');\n\nvar Routes = (props) => {\n    return (\n        <HashRouter>\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/chat\" component={Chat} />\n            <Route path='/learn' component={LearnWords} />\n            <Route path='/flagged' component={FlaggedWords} />\n            <Route path='/learnt' component={LearntWords} />\n        </HashRouter>\n    );\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes.jsx';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/black-dashboard-pro-react.css'\nimport './styles/style.scss'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}